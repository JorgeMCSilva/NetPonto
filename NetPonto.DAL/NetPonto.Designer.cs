//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NetPontoDBModel", "FK_NetPonto_Users_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetPonto.DAL.aspnet_Users), "NetPonto_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetPonto.DAL.NetPonto_Users), true)]
[assembly: EdmRelationshipAttribute("NetPontoDBModel", "FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetPonto.DAL.NetPonto_Events), "NetPonto_EventsUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.NetPonto_EventsUser), true)]
[assembly: EdmRelationshipAttribute("NetPontoDBModel", "FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetPonto.DAL.NetPonto_Users), "NetPonto_EventsUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.NetPonto_EventsUser), true)]
[assembly: EdmRelationshipAttribute("NetPontoDBModel", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.aspnet_Roles), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.aspnet_Users))]
[assembly: EdmRelationshipAttribute("NetPontoDBModel", "NetPonto_ArticleTags", "NetPonto_Article", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.NetPonto_Article), "NetPonto_TagCloud", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.NetPonto_TagCloud))]
[assembly: EdmRelationshipAttribute("NetPontoDBModel", "NetPonto_EvemtSurveys", "NetPonto_EventsUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.NetPonto_EventsUser), "NetPonto_Surveys", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.NetPonto_Surveys))]
[assembly: EdmRelationshipAttribute("NetPontoDBModel", "NetPonto_UserTags", "NetPonto_TagCloud", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.NetPonto_TagCloud), "NetPonto_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetPonto.DAL.NetPonto_Users))]

#endregion

namespace NetPonto.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NetPontoDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NetPontoDBEntities object using the connection string found in the 'NetPontoDBEntities' section of the application configuration file.
        /// </summary>
        public NetPontoDBEntities() : base("name=NetPontoDBEntities", "NetPontoDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NetPontoDBEntities object.
        /// </summary>
        public NetPontoDBEntities(string connectionString) : base(connectionString, "NetPontoDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NetPontoDBEntities object.
        /// </summary>
        public NetPontoDBEntities(EntityConnection connection) : base(connection, "NetPontoDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetPonto_Article> NetPonto_Article
        {
            get
            {
                if ((_NetPonto_Article == null))
                {
                    _NetPonto_Article = base.CreateObjectSet<NetPonto_Article>("NetPonto_Article");
                }
                return _NetPonto_Article;
            }
        }
        private ObjectSet<NetPonto_Article> _NetPonto_Article;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetPonto_Comments> NetPonto_Comments
        {
            get
            {
                if ((_NetPonto_Comments == null))
                {
                    _NetPonto_Comments = base.CreateObjectSet<NetPonto_Comments>("NetPonto_Comments");
                }
                return _NetPonto_Comments;
            }
        }
        private ObjectSet<NetPonto_Comments> _NetPonto_Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetPonto_Events> NetPonto_Events
        {
            get
            {
                if ((_NetPonto_Events == null))
                {
                    _NetPonto_Events = base.CreateObjectSet<NetPonto_Events>("NetPonto_Events");
                }
                return _NetPonto_Events;
            }
        }
        private ObjectSet<NetPonto_Events> _NetPonto_Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetPonto_EventsUser> NetPonto_EventsUser
        {
            get
            {
                if ((_NetPonto_EventsUser == null))
                {
                    _NetPonto_EventsUser = base.CreateObjectSet<NetPonto_EventsUser>("NetPonto_EventsUser");
                }
                return _NetPonto_EventsUser;
            }
        }
        private ObjectSet<NetPonto_EventsUser> _NetPonto_EventsUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetPonto_Log> NetPonto_Log
        {
            get
            {
                if ((_NetPonto_Log == null))
                {
                    _NetPonto_Log = base.CreateObjectSet<NetPonto_Log>("NetPonto_Log");
                }
                return _NetPonto_Log;
            }
        }
        private ObjectSet<NetPonto_Log> _NetPonto_Log;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetPonto_Surveys> NetPonto_Surveys
        {
            get
            {
                if ((_NetPonto_Surveys == null))
                {
                    _NetPonto_Surveys = base.CreateObjectSet<NetPonto_Surveys>("NetPonto_Surveys");
                }
                return _NetPonto_Surveys;
            }
        }
        private ObjectSet<NetPonto_Surveys> _NetPonto_Surveys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetPonto_TagCloud> NetPonto_TagCloud
        {
            get
            {
                if ((_NetPonto_TagCloud == null))
                {
                    _NetPonto_TagCloud = base.CreateObjectSet<NetPonto_TagCloud>("NetPonto_TagCloud");
                }
                return _NetPonto_TagCloud;
            }
        }
        private ObjectSet<NetPonto_TagCloud> _NetPonto_TagCloud;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetPonto_Users> NetPonto_Users
        {
            get
            {
                if ((_NetPonto_Users == null))
                {
                    _NetPonto_Users = base.CreateObjectSet<NetPonto_Users>("NetPonto_Users");
                }
                return _NetPonto_Users;
            }
        }
        private ObjectSet<NetPonto_Users> _NetPonto_Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetPonto_Article EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetPonto_Article(NetPonto_Article netPonto_Article)
        {
            base.AddObject("NetPonto_Article", netPonto_Article);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetPonto_Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetPonto_Comments(NetPonto_Comments netPonto_Comments)
        {
            base.AddObject("NetPonto_Comments", netPonto_Comments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetPonto_Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetPonto_Events(NetPonto_Events netPonto_Events)
        {
            base.AddObject("NetPonto_Events", netPonto_Events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetPonto_EventsUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetPonto_EventsUser(NetPonto_EventsUser netPonto_EventsUser)
        {
            base.AddObject("NetPonto_EventsUser", netPonto_EventsUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetPonto_Log EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetPonto_Log(NetPonto_Log netPonto_Log)
        {
            base.AddObject("NetPonto_Log", netPonto_Log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetPonto_Surveys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetPonto_Surveys(NetPonto_Surveys netPonto_Surveys)
        {
            base.AddObject("NetPonto_Surveys", netPonto_Surveys);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetPonto_TagCloud EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetPonto_TagCloud(NetPonto_TagCloud netPonto_TagCloud)
        {
            base.AddObject("NetPonto_TagCloud", netPonto_TagCloud);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetPonto_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetPonto_Users(NetPonto_Users netPonto_Users)
        {
            base.AddObject("NetPonto_Users", netPonto_Users);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("NetPontoDBModel.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("NetPontoDBModel.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "FK_NetPonto_Users_aspnet_Users", "NetPonto_Users")]
        public NetPonto_Users NetPonto_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Users>("NetPontoDBModel.FK_NetPonto_Users_aspnet_Users", "NetPonto_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Users>("NetPontoDBModel.FK_NetPonto_Users_aspnet_Users", "NetPonto_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NetPonto_Users> NetPonto_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Users>("NetPontoDBModel.FK_NetPonto_Users_aspnet_Users", "NetPonto_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NetPonto_Users>("NetPontoDBModel.FK_NetPonto_Users_aspnet_Users", "NetPonto_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("NetPontoDBModel.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("NetPontoDBModel.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="NetPonto_Article")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetPonto_Article : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetPonto_Article object.
        /// </summary>
        /// <param name="articleId">Initial value of the ArticleId property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static NetPonto_Article CreateNetPonto_Article(global::System.Int32 articleId, global::System.String content, global::System.String title)
        {
            NetPonto_Article netPonto_Article = new NetPonto_Article();
            netPonto_Article.ArticleId = articleId;
            netPonto_Article.Content = content;
            netPonto_Article.Title = title;
            return netPonto_Article;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleId
        {
            get
            {
                return _ArticleId;
            }
            set
            {
                if (_ArticleId != value)
                {
                    OnArticleIdChanging(value);
                    ReportPropertyChanging("ArticleId");
                    _ArticleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArticleId");
                    OnArticleIdChanged();
                }
            }
        }
        private global::System.Int32 _ArticleId;
        partial void OnArticleIdChanging(global::System.Int32 value);
        partial void OnArticleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "NetPonto_ArticleTags", "NetPonto_TagCloud")]
        public EntityCollection<NetPonto_TagCloud> NetPonto_TagCloud
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetPonto_TagCloud>("NetPontoDBModel.NetPonto_ArticleTags", "NetPonto_TagCloud");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetPonto_TagCloud>("NetPontoDBModel.NetPonto_ArticleTags", "NetPonto_TagCloud", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="NetPonto_Comments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetPonto_Comments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetPonto_Comments object.
        /// </summary>
        /// <param name="commentId">Initial value of the CommentId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static NetPonto_Comments CreateNetPonto_Comments(global::System.Int32 commentId, global::System.String description)
        {
            NetPonto_Comments netPonto_Comments = new NetPonto_Comments();
            netPonto_Comments.CommentId = commentId;
            netPonto_Comments.Description = description;
            return netPonto_Comments;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _CommentId;
        partial void OnCommentIdChanging(global::System.Int32 value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="NetPonto_Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetPonto_Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetPonto_Events object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static NetPonto_Events CreateNetPonto_Events(global::System.Int32 eventId, global::System.DateTime createdOn, global::System.Guid createdBy, global::System.Boolean deleted)
        {
            NetPonto_Events netPonto_Events = new NetPonto_Events();
            netPonto_Events.EventId = eventId;
            netPonto_Events.CreatedOn = createdOn;
            netPonto_Events.CreatedBy = createdBy;
            netPonto_Events.Deleted = deleted;
            return netPonto_Events;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private Nullable<global::System.Decimal> _Lat;
        partial void OnLatChanging(Nullable<global::System.Decimal> value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Lon
        {
            get
            {
                return _Lon;
            }
            set
            {
                OnLonChanging(value);
                ReportPropertyChanging("Lon");
                _Lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lon");
                OnLonChanged();
            }
        }
        private Nullable<global::System.Decimal> _Lon;
        partial void OnLonChanging(Nullable<global::System.Decimal> value);
        partial void OnLonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Guid _CreatedBy;
        partial void OnCreatedByChanging(global::System.Guid value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Guid> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Guid> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private Nullable<global::System.Int32> _Seats;
        partial void OnSeatsChanging(Nullable<global::System.Int32> value);
        partial void OnSeatsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_EventsUser")]
        public EntityCollection<NetPonto_EventsUser> NetPonto_EventsUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetPonto_EventsUser>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_EventsUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetPonto_EventsUser>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_EventsUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="NetPonto_EventsUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetPonto_EventsUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetPonto_EventsUser object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="speaker">Initial value of the Speaker property.</param>
        public static NetPonto_EventsUser CreateNetPonto_EventsUser(global::System.Int32 eventId, global::System.Guid userId, global::System.Boolean speaker)
        {
            NetPonto_EventsUser netPonto_EventsUser = new NetPonto_EventsUser();
            netPonto_EventsUser.EventId = eventId;
            netPonto_EventsUser.UserId = userId;
            netPonto_EventsUser.Speaker = speaker;
            return netPonto_EventsUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prize
        {
            get
            {
                return _Prize;
            }
            set
            {
                OnPrizeChanging(value);
                ReportPropertyChanging("Prize");
                _Prize = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prize");
                OnPrizeChanged();
            }
        }
        private global::System.String _Prize;
        partial void OnPrizeChanging(global::System.String value);
        partial void OnPrizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Speaker
        {
            get
            {
                return _Speaker;
            }
            set
            {
                OnSpeakerChanging(value);
                ReportPropertyChanging("Speaker");
                _Speaker = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speaker");
                OnSpeakerChanged();
            }
        }
        private global::System.Boolean _Speaker;
        partial void OnSpeakerChanging(global::System.Boolean value);
        partial void OnSpeakerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_Events")]
        public NetPonto_Events NetPonto_Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Events>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Events>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NetPonto_Events> NetPonto_EventsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Events>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NetPonto_Events>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Events", "NetPonto_Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_Users")]
        public NetPonto_Users NetPonto_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Users>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Users>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NetPonto_Users> NetPonto_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetPonto_Users>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NetPonto_Users>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "NetPonto_EvemtSurveys", "NetPonto_Surveys")]
        public EntityCollection<NetPonto_Surveys> NetPonto_Surveys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetPonto_Surveys>("NetPontoDBModel.NetPonto_EvemtSurveys", "NetPonto_Surveys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetPonto_Surveys>("NetPontoDBModel.NetPonto_EvemtSurveys", "NetPonto_Surveys", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="NetPonto_Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetPonto_Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetPonto_Log object.
        /// </summary>
        /// <param name="logId">Initial value of the LogId property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="workingDirectory">Initial value of the WorkingDirectory property.</param>
        public static NetPonto_Log CreateNetPonto_Log(global::System.Guid logId, global::System.DateTime entryDate, global::System.String workingDirectory)
        {
            NetPonto_Log netPonto_Log = new NetPonto_Log();
            netPonto_Log.LogId = logId;
            netPonto_Log.EntryDate = entryDate;
            netPonto_Log.WorkingDirectory = workingDirectory;
            return netPonto_Log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LogId
        {
            get
            {
                return _LogId;
            }
            set
            {
                if (_LogId != value)
                {
                    OnLogIdChanging(value);
                    ReportPropertyChanging("LogId");
                    _LogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogId");
                    OnLogIdChanged();
                }
            }
        }
        private global::System.Guid _LogId;
        partial void OnLogIdChanging(global::System.Guid value);
        partial void OnLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogLevel
        {
            get
            {
                return _LogLevel;
            }
            set
            {
                OnLogLevelChanging(value);
                ReportPropertyChanging("LogLevel");
                _LogLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogLevel");
                OnLogLevelChanged();
            }
        }
        private global::System.String _LogLevel;
        partial void OnLogLevelChanging(global::System.String value);
        partial void OnLogLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Assembly
        {
            get
            {
                return _Assembly;
            }
            set
            {
                OnAssemblyChanging(value);
                ReportPropertyChanging("Assembly");
                _Assembly = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Assembly");
                OnAssemblyChanged();
            }
        }
        private global::System.String _Assembly;
        partial void OnAssemblyChanging(global::System.String value);
        partial void OnAssemblyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkingDirectory
        {
            get
            {
                return _WorkingDirectory;
            }
            set
            {
                OnWorkingDirectoryChanging(value);
                ReportPropertyChanging("WorkingDirectory");
                _WorkingDirectory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkingDirectory");
                OnWorkingDirectoryChanged();
            }
        }
        private global::System.String _WorkingDirectory;
        partial void OnWorkingDirectoryChanging(global::System.String value);
        partial void OnWorkingDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DetailedMessage
        {
            get
            {
                return _DetailedMessage;
            }
            set
            {
                OnDetailedMessageChanging(value);
                ReportPropertyChanging("DetailedMessage");
                _DetailedMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DetailedMessage");
                OnDetailedMessageChanged();
            }
        }
        private global::System.String _DetailedMessage;
        partial void OnDetailedMessageChanging(global::System.String value);
        partial void OnDetailedMessageChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="NetPonto_Surveys")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetPonto_Surveys : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetPonto_Surveys object.
        /// </summary>
        /// <param name="surveyId">Initial value of the SurveyId property.</param>
        public static NetPonto_Surveys CreateNetPonto_Surveys(global::System.Int32 surveyId)
        {
            NetPonto_Surveys netPonto_Surveys = new NetPonto_Surveys();
            netPonto_Surveys.SurveyId = surveyId;
            return netPonto_Surveys;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SurveyId
        {
            get
            {
                return _SurveyId;
            }
            set
            {
                if (_SurveyId != value)
                {
                    OnSurveyIdChanging(value);
                    ReportPropertyChanging("SurveyId");
                    _SurveyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SurveyId");
                    OnSurveyIdChanged();
                }
            }
        }
        private global::System.Int32 _SurveyId;
        partial void OnSurveyIdChanging(global::System.Int32 value);
        partial void OnSurveyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "NetPonto_EvemtSurveys", "NetPonto_EventsUser")]
        public EntityCollection<NetPonto_EventsUser> NetPonto_EventsUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetPonto_EventsUser>("NetPontoDBModel.NetPonto_EvemtSurveys", "NetPonto_EventsUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetPonto_EventsUser>("NetPontoDBModel.NetPonto_EvemtSurveys", "NetPonto_EventsUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="NetPonto_TagCloud")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetPonto_TagCloud : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetPonto_TagCloud object.
        /// </summary>
        /// <param name="tagId">Initial value of the TagId property.</param>
        public static NetPonto_TagCloud CreateNetPonto_TagCloud(global::System.Int32 tagId)
        {
            NetPonto_TagCloud netPonto_TagCloud = new NetPonto_TagCloud();
            netPonto_TagCloud.TagId = tagId;
            return netPonto_TagCloud;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                if (_TagId != value)
                {
                    OnTagIdChanging(value);
                    ReportPropertyChanging("TagId");
                    _TagId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagId");
                    OnTagIdChanged();
                }
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "NetPonto_ArticleTags", "NetPonto_Article")]
        public EntityCollection<NetPonto_Article> NetPonto_Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetPonto_Article>("NetPontoDBModel.NetPonto_ArticleTags", "NetPonto_Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetPonto_Article>("NetPontoDBModel.NetPonto_ArticleTags", "NetPonto_Article", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "NetPonto_UserTags", "NetPonto_Users")]
        public EntityCollection<NetPonto_Users> NetPonto_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetPonto_Users>("NetPontoDBModel.NetPonto_UserTags", "NetPonto_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetPonto_Users>("NetPontoDBModel.NetPonto_UserTags", "NetPonto_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetPontoDBModel", Name="NetPonto_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetPonto_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetPonto_Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static NetPonto_Users CreateNetPonto_Users(global::System.Guid userId, global::System.DateTime createdOn, global::System.Boolean deleted)
        {
            NetPonto_Users netPonto_Users = new NetPonto_Users();
            netPonto_Users.UserId = userId;
            netPonto_Users.CreatedOn = createdOn;
            netPonto_Users.Deleted = deleted;
            return netPonto_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Avatar
        {
            get
            {
                return _Avatar;
            }
            set
            {
                OnAvatarChanging(value);
                ReportPropertyChanging("Avatar");
                _Avatar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Avatar");
                OnAvatarChanged();
            }
        }
        private global::System.String _Avatar;
        partial void OnAvatarChanging(global::System.String value);
        partial void OnAvatarChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "FK_NetPonto_Users_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("NetPontoDBModel.FK_NetPonto_Users_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("NetPontoDBModel.FK_NetPonto_Users_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("NetPontoDBModel.FK_NetPonto_Users_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("NetPontoDBModel.FK_NetPonto_Users_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_EventsUser")]
        public EntityCollection<NetPonto_EventsUser> NetPonto_EventsUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetPonto_EventsUser>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_EventsUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetPonto_EventsUser>("NetPontoDBModel.FK_NetPonto_EventsUser_NetPonto_Users", "NetPonto_EventsUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetPontoDBModel", "NetPonto_UserTags", "NetPonto_TagCloud")]
        public EntityCollection<NetPonto_TagCloud> NetPonto_TagCloud
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetPonto_TagCloud>("NetPontoDBModel.NetPonto_UserTags", "NetPonto_TagCloud");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetPonto_TagCloud>("NetPontoDBModel.NetPonto_UserTags", "NetPonto_TagCloud", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
